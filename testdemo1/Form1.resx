<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>