<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>